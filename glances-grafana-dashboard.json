{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "influxdb",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "bargauge",
      "name": "Bar gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "12.1.0"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 29,
      "panels": [],
      "title": "Glances $host",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 2,
        "x": 0,
        "y": 1
      },
      "id": 5,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": ["lastNotNull"],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "column": "cpucore",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            }
          ],
          "measurement": "load",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"load\" and\n    r._field == \"cpucore\" and\n    r.hostname == \"${host}\"\n  )\n  |> last()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["cpucore"],
                "type": "field"
              },
              {
                "params": [],
                "type": "max"
              }
            ]
          ],
          "series": "load",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ]
        }
      ],
      "title": "Core",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 20,
        "x": 2,
        "y": 1
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": ["mean", "max", "min"],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "alias": "1min",
          "column": "min1",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "measurement": "load",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"load\" and\n    r._field == \"min5\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean5\")\n  \n  ",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["min1"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "load",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ],
          "target": "randomWalk('random walk')"
        },
        {
          "alias": "1min",
          "column": "min1",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "load",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"load\" and\n    r._field == \"min15\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean15\")\n  \n  ",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["min1"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "load",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ],
          "target": "randomWalk('random walk')"
        },
        {
          "alias": "1min",
          "column": "min1",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "load",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"load\" and\n    r._field == \"min1\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean1\")\n  \n  ",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["min1"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "load",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ],
          "target": "randomWalk('random walk')"
        }
      ],
      "title": "Load",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "rgb(31, 120, 193)",
            "mode": "fixed"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 2,
        "x": 22,
        "y": 1
      },
      "id": 18,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": ["mean"],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "text": {},
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "column": "total",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            }
          ],
          "measurement": "processcount",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"processcount\" and\n    r._field == \"total\" and\n    r.hostname == \"${host}\"\n  )\n  |> last()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["total"],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "series": "processcount",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ]
        }
      ],
      "title": "Processes",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 7
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "alias": "User",
          "column": "user",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "measurement": "cpu",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"cpu\" and\n    r._field == \"user\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"user\")\n  \n  ",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["user"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "cpu",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ]
        },
        {
          "alias": "System",
          "column": "system",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "measurement": "cpu",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"cpu\" and\n    r._field == \"system\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"system\")\n  \n  ",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["system"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "cpu",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ],
          "target": ""
        },
        {
          "alias": "IoWait",
          "column": "iowait",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "measurement": "cpu",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"cpu\" and\n    r._field == \"iowait\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"iowait\")\n  \n  ",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["iowait"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "cpu",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ],
          "target": ""
        }
      ],
      "title": "CPU (%)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*total./"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/^used.*$/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 30
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 7
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "alias": "Used",
          "column": "used",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "measurement": "mem",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"mem\" and\n    r._field == \"used\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"used\")\n  \n  ",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["used"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "mem",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ]
        },
        {
          "alias": "Max",
          "column": "total",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "measurement": "mem",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"mem\" and\n    r._field == \"total\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"total\")\n  \n  ",
          "rawQuery": false,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["total"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "mem",
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ],
          "target": ""
        }
      ],
      "title": "MEM",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 30,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 14
      },
      "id": 9,
      "options": {
        "legend": {
          "calcs": ["mean", "max", "min"],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "alias": "In",
          "column": "enp0s25.rx",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["null"],
              "type": "fill"
            }
          ],
          "hide": false,
          "interval": "",
          "measurement": "$host.network",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"network\" and\n    (r._field == \"rx\" or r._field == \"bytes_recv\" or r._field == \"time_since_update\") and\n    r.interface_name == \"${interface}\" and\n    r.hostname == \"${host}\"\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> map(fn: (r) => ({\n    r with\n    _value: if exists r.rx then\n              (r.rx / r.time_since_update) * 8.0\n            else if exists r.bytes_recv then\n              (r.bytes_recv / r.time_since_update) * 8.0\n            else\n              0.0,\n    _field: \"rx_rate\"\n  }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_time\", \"_value\"])\n  |> rename(columns: {_value: \"rx_rate\"})\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["eth0.rx"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "network",
          "tags": []
        },
        {
          "alias": "Out",
          "column": "eth0.tx*-1",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["null"],
              "type": "fill"
            }
          ],
          "measurement": "$host.network",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"network\" and\n    (r._field == \"tx\" or r._field == \"bytes_sent\" or r._field == \"time_since_update\") and\n    r.interface_name == \"${interface}\" and\n    r.hostname == \"${host}\"\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> map(fn: (r) => ({\n    r with\n    _value: if exists r.tx then\n              (r.tx / r.time_since_update) * 8.0\n            else if exists r.bytes_sent then\n              (r.bytes_sent / r.time_since_update) * 8.0\n            else\n              0.0,\n    _field: \"tx_rate\"\n  }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_time\", \"_value\"])\n  |> rename(columns: {_value: \"tx_rate\"})\n",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["eth0.tx"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "network",
          "tags": [],
          "target": ""
        }
      ],
      "title": "Network Interface: $interface",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/total.*/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/used.*/"
            },
            "properties": [
              {
                "id": "custom.fillOpacity",
                "value": 30
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 14
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "alias": "Used",
          "column": "used",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            }
          ],
          "measurement": "$host.memswap",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"memswap\" and\n    r._field == \"used\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"used\")\n  ",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["used"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "memswap",
          "tags": []
        },
        {
          "alias": "Max",
          "column": "total",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            }
          ],
          "measurement": "$host.memswap",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"memswap\" and\n    r._field == \"total\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"total\")\n  \n  ",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["total"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "memswap",
          "tags": [],
          "target": ""
        }
      ],
      "title": "SWAP",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 15,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 21
      },
      "id": 10,
      "options": {
        "legend": {
          "calcs": ["mean", "max", "min"],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "alias": "Read",
          "column": "sda2.read_bytes",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "measurement": "$host.diskio",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"diskio\" and\n    (r._field == \"read_bytes\" or r._field == \"time_since_update\") and\n    r.disk_name == \"${disk}\" and\n    r.hostname == \"${host}\"\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> map(fn: (r) => ({ r with _value: (r.read_bytes / r.time_since_update) }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_time\", \"_value\"])\n  |> rename(columns: {_value: \"read_rate\"})\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["sda2.read_bytes"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "diskio",
          "tags": []
        },
        {
          "alias": "Write",
          "column": "sda2.write_bytes",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["auto"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "measurement": "$host.diskio",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"diskio\" and\n    (r._field == \"write_bytes\" or r._field == \"time_since_update\") and\n    r.disk_name == \"${disk}\" and\n    r.hostname == \"${host}\"\n  )\n  |> pivot(\n    rowKey:[\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> map(fn: (r) => ({ r with _value: (r.write_bytes / r.time_since_update) * -1.0 }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_time\", \"_value\"])\n  |> rename(columns: {_value: \"write_rate\"})\n",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["sda2.write_bytes"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "diskio",
          "tags": [],
          "target": ""
        }
      ],
      "title": "Disk IO: $disk",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 21
      },
      "id": 38,
      "options": {
        "displayMode": "lcd",
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "maxVizHeight": 60,
        "minVizHeight": 15,
        "minVizWidth": 75,
        "namePlacement": "top",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": ["lastNotNull"],
          "fields": "",
          "values": true
        },
        "showUnfilled": true,
        "sizing": "manual",
        "valueMode": "color"
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "alias": "Used",
          "column": "\"/.used\"",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "function": "mean",
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "measurement": "fs",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"fs\" and\n    r.hostname == \"${host}\"\n  )\n  |> filter(fn: (r) => r._field == \"size\" or r._field == \"used\" or r._field == \"percent\")\n  |> last()\n  |> pivot(\n    rowKey: [\"mnt_point\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> map(fn: (r) => ({\n    r with\n    combinedLabel: \"${r.mnt_point}    (\" + string(v: int(v: (r.used / (1024.0 * 1024.0 * 1024.0)))) + \" GiB of \" + string(v: int(v: (r.size / (1024.0 * 1024.0 * 1024.0)))) + \" GiB)\",\n    perc: r.percent\n  }))\n  |> drop(columns: [\"size\", \"used\", \"percent\"])\n  |> rename(columns: {perc: \"percent\"})",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["used"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "series": "fs",
          "tags": [
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ]
        }
      ],
      "title": "Storage",
      "transformations": [
        {
          "disabled": true,
          "id": "joinByLabels",
          "options": {
            "value": "mnt_point"
          }
        }
      ],
      "type": "bargauge"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 28
      },
      "id": 39,
      "panels": [],
      "title": "All Containers Memory",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "adjusted_memory_usage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "bytes"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 29
      },
      "id": 40,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) =>\r\n    r._measurement == \"containers\" and\r\n    (r._field == \"memory_usage\" or r._field == \"memory_inactive_file\") and\r\n    r.hostname == \"${host}\"\r\n  )\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({\r\n    r with\r\n    adjusted_memory_usage: if exists r.memory_inactive_file then r.memory_usage - r.memory_inactive_file else r.memory_usage\r\n  }))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, column: \"adjusted_memory_usage\", createEmpty: false)\r\n  |> yield(name: \"MEM\")",
          "refId": "A"
        }
      ],
      "title": "All Containers Memory",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 41
      },
      "id": 41,
      "panels": [],
      "title": "All Containers CPU(%)",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.name}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "cpu_percent"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 42
      },
      "id": 42,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"${Bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) =>\r\n    r._measurement == \"containers\" and\r\n    r._field == \"cpu_percent\" and\r\n    r.hostname == \"${host}\"\r\n  )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"CPU\")",
          "refId": "A"
        }
      ],
      "title": "All Containers CPU(%)",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 54
      },
      "id": 33,
      "panels": [],
      "title": "Sensors $host",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 5,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${Sensor}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 0,
        "y": 55
      },
      "id": 21,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "right",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "alias": "AmbientTemperature",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            },
            {
              "params": ["null"],
              "type": "fill"
            }
          ],
          "measurement": "sensors",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"sensors\" and\n    r._field == \"value\" and\n    r.label == \"${Sensor}\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"${Sensor}\")\n  \n  ",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["value"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "label",
              "operator": "=",
              "value": "Ambient"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ]
        }
      ],
      "title": "Sensor: ${Sensor} Temperature",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 5,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels.label}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 12,
        "y": 55
      },
      "id": 23,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "right",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "12.1.0",
      "targets": [
        {
          "alias": "CpuTemperature",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "dsType": "influxdb",
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            },
            {
              "params": ["null"],
              "type": "fill"
            }
          ],
          "measurement": "sensors",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"sensors\" and\n    r._field == \"value\" and\n    r.label =~ /^Core/ and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"${Sensor}\")\n  \n  ",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["value"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "label",
              "operator": "=",
              "value": "${Sensor}"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ]
        }
      ],
      "title": "CPU Temperature",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 61
      },
      "id": 37,
      "panels": [],
      "title": "Containers hosted on $host",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "cpu_percent"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#cca300",
                  "mode": "fixed"
                }
              },
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "displayName",
                "value": "CPU"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "adjusted_memory_usage"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#2f575e",
                  "mode": "fixed"
                }
              },
              {
                "id": "unit",
                "value": "bytes"
              },
              {
                "id": "custom.fillOpacity",
                "value": 36
              },
              {
                "id": "displayName",
                "value": "Memory"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 62
      },
      "id": 25,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "hoverProximity": 1000,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.1.0",
      "repeat": "container",
      "repeatDirection": "v",
      "targets": [
        {
          "alias": "MEM",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "containers",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"containers\" and\n    (r._field == \"memory_usage\" or r._field == \"memory_inactive_file\") and\n    r.name == \"${container}\" and\n    r.hostname == \"${host}\"\n  )\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({\n    r with\n    adjusted_memory_usage: if exists r.memory_inactive_file then r.memory_usage - r.memory_inactive_file else r.memory_usage\n  }))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, column: \"adjusted_memory_usage\", createEmpty: false)\n  |> yield(name: \"MEM\")\n  \n  ",
          "rawQuery": false,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["memory_usage"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$container$/"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ]
        },
        {
          "alias": "CPU%",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": ["$__interval"],
              "type": "time"
            },
            {
              "params": ["none"],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "containers",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket:\"${Bucket}\")\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"containers\" and\n    r._field == \"cpu_percent\" and\n    r.name == \"${container}\" and\n    r.hostname == \"${host}\"\n  )\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"CPU%\")\n  \n  ",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": ["cpu_percent"],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "name",
              "operator": "=~",
              "value": "/^$container$/"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$host$/"
            }
          ]
        }
      ],
      "title": "$container container",
      "type": "timeseries"
    }
  ],
  "refresh": "10s",
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "buckets()",
        "includeAll": false,
        "name": "Bucket",
        "options": [],
        "query": "buckets()",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r.hostname != \"\")\n  |> distinct(column: \"hostname\")\n  |> keep(columns: [\"hostname\"])\n  |> rename(columns: {hostname: \"_value\"})",
        "includeAll": false,
        "label": "Host",
        "name": "host",
        "options": [],
        "query": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r.hostname != \"\")\n  |> distinct(column: \"hostname\")\n  |> keep(columns: [\"hostname\"])\n  |> rename(columns: {hostname: \"_value\"})",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"containers\" and r.name != \"\")\n  |> distinct(column: \"name\")\n  |> keep(columns: [\"name\"])\n  |> rename(columns: {name: \"_value\"})",
        "includeAll": true,
        "label": "Container",
        "multi": true,
        "name": "container",
        "options": [],
        "query": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r._measurement == \"containers\" and r.name != \"\")\n  |> distinct(column: \"name\")\n  |> keep(columns: [\"name\"])\n  |> rename(columns: {name: \"_value\"})",
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r.interface_name != \"\")\n  |> distinct(column: \"interface_name\")\n  |> keep(columns: [\"interface_name\"])\n  |> rename(columns: {interface_name: \"_value\"})",
        "includeAll": false,
        "label": "Network Interface",
        "name": "interface",
        "options": [],
        "query": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r.interface_name != \"\")\n  |> distinct(column: \"interface_name\")\n  |> keep(columns: [\"interface_name\"])\n  |> rename(columns: {interface_name: \"_value\"})",
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r.disk_name != \"\")\n  |> distinct(column: \"disk_name\")\n  |> keep(columns: [\"disk_name\"])\n  |> rename(columns: {disk_name: \"_value\"})",
        "includeAll": false,
        "label": "Disk",
        "name": "disk",
        "options": [],
        "query": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) => r.disk_name != \"\")\n  |> distinct(column: \"disk_name\")\n  |> keep(columns: [\"disk_name\"])\n  |> rename(columns: {disk_name: \"_value\"})",
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) =>  r._measurement == \"sensors\" and r._field == \"value\" and r.hostname == \"${host}\" and r.label != \"\")\n  |> distinct(column: \"label\")\n  |> keep(columns: [\"label\"])\n  |> rename(columns: {label: \"_value\"})",
        "includeAll": false,
        "label": "Temp Sensor",
        "name": "Sensor",
        "options": [],
        "query": "from(bucket: \"${Bucket}\")\n  |> range(start: -1d)\n  |> filter(fn: (r) =>  r._measurement == \"sensors\" and r._field == \"value\" and r.hostname == \"${host}\" and r.label != \"\")\n  |> distinct(column: \"label\")\n  |> keep(columns: [\"label\"])\n  |> rename(columns: {label: \"_value\"})",
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Glances [Flux]",
  "uid": "ZEITGE1ST",
  "version": 3,
  "weekStart": ""
}
